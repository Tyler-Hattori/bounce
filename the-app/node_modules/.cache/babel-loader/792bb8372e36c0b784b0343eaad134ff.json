{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\thatt\\\\winter-project\\\\the-app\\\\src\\\\Important Pages\\\\LineRiderGame.js\";\nimport './LineRiderGame.css';\nimport React from 'react';\nimport GameOver from './GameOver.js';\nimport Ball from '../Components/Ball';\nimport Tile from '../Components/Tile';\nimport QuestionBox from '../Components/QuestionBox';\nimport QBoxHandling from '../Components/Images/question_box_handling.png';\nimport Spring from '../Components/Spring';\nimport SpringImage from '../Components/Images/spring.png';\n\nclass LineRiderGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.state = {\n      screenWidth: 1620,\n      screenHeight: 977,\n      yPos: 150,\n      xPos: 0,\n      ballDirection: '',\n      timeoutId: 0,\n      gameLoopTimeout: 50,\n      ballSpeedY: 0,\n      ballSpeedX: 0,\n      maxSpeed: 30,\n      gravity: props.difficulty / 2,\n      xAcceleration: 4,\n      ballSize: 40,\n      keyPressed: false,\n      bounced: false,\n      isGameover: false,\n      loggedIn: false,\n      setName: '',\n      attempts: 1,\n      difficulty: props.difficulty,\n      background: props.background,\n      collidedObj: /*#__PURE__*/_jsxDEV(Tile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }, this),\n      qboxanim: false,\n      springanim: false,\n      time1: 0,\n      time2: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      screenWidth: document.getElementById(\"fill_screen\").clientWidth,\n      screenHeight: document.getElementById(\"fill_screen\").clientHeight\n    });\n    this.obstacles = [];\n    this.obstacles.push( /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 800,\n      yPos: this.state.screenHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this));\n    this.generateObstacles(this.state.difficulty);\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.gameLoop();\n  }\n\n  generateObstacles(difficulty) {\n    switch (difficulty) {\n      case 1:\n        this.obstacles.push(this.randomPlebianCourse());\n        break;\n\n      case 2:\n        this.obstacles.push(this.randomEasyCourse());\n        break;\n\n      case 3:\n        this.obstacles.push(this.randomMediumCourse());\n        break;\n\n      case 4:\n        this.obstacles.push(this.randomHardCourse());\n        break;\n\n      case 5:\n        this.obstacles.push(this.randomExpertCourse());\n        break;\n    }\n  }\n\n  randomPlebianCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: this.state.screenHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this);\n  }\n\n  randomEasyCourse() {\n    return /*#__PURE__*/_jsxDEV(Spring, {\n      index: 1,\n      height: 100,\n      xPos: 1000,\n      yPos: this.state.screenHeight - 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this);\n  }\n\n  randomMediumCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: this.state.screenHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this);\n  }\n\n  randomHardCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: this.state.screenHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this);\n  }\n\n  randomExpertCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: this.state.screenHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this);\n  }\n\n  gameLoop() {\n    let timeoutId = setTimeout(() => {\n      if (!this.state.isGameOver) {\n        if (this.state.qboxanim) this.setState({\n          time2: 20000 - new Date().getTime() + this.state.time1\n        });\n        this.changeDirection();\n        if (this.state.yPos > this.state.screenHeight - 30) this.resetGame();\n        this.setState({\n          keyPressed: false,\n          ballDirection: 'zero acceleration'\n        });\n        this.fall();\n        if (this.state.xAcceleration > 4 && this.state.time2 <= 0) this.setState({\n          xAcceleration: 4,\n          qboxanim: false\n        });\n      }\n\n      this.gameLoop();\n    }, this.state.gameLoopTimeout);\n    this.setState({\n      timeoutId\n    });\n  }\n\n  resetGame() {\n    let attempts = this.state.attempts;\n    this.obstacles = [];\n    this.obstacles.push( /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 800,\n      yPos: this.state.screenHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }, this));\n    this.generateObstacles(this.state.difficulty);\n    this.setState({\n      xPos: 0,\n      yPos: 150,\n      ballDirection: '',\n      timeoutId: 0,\n      ballSpeedY: 0,\n      ballSpeedX: 0,\n      keyPressed: false,\n      bounced: false,\n      attempts: attempts + 1,\n      qboxanim: false,\n      springanim: false,\n      xAcceleration: 4,\n      time1: 0,\n      time2: 0\n    });\n  }\n\n  fall() {\n    let grav = this.state.gravity;\n    let ball_speed = this.state.ballSpeedY;\n    let y = this.state.yPos;\n\n    if (this.isThereCollision(this.obstacles) && !this.state.bounced) {\n      if (this.state.collidedObj.type === Tile) {\n        ball_speed *= -1;\n        ball_speed += this.state.difficulty;\n        this.setState({\n          bounced: true\n        });\n      } else if (this.state.collidedObj.type === QuestionBox && !this.state.qboxanim) {\n        this.setState({\n          qboxanim: true,\n          xAcceleration: 10,\n          time1: new Date().getTime()\n        });\n      } else if (this.state.collidedObj.type === Spring) {\n        ball_speed = -40 - grav;\n        this.setState({\n          springanim: true,\n          bounced: true,\n          ballSpeedY: ball_speed,\n          yPos: y + ball_speed\n        });\n      }\n    } else if (!this.isThereCollision(this.obstacles) && this.state.bounced) {\n      this.setState({\n        bounced: false\n      });\n    }\n\n    this.setState({\n      ballSpeedY: ball_speed + grav,\n      yPos: y + ball_speed\n    });\n  }\n\n  isThereCollision(arr) {\n    let ball = {\n      x: this.state.xPos + this.state.ballSize / 2,\n      y: this.state.yPos + this.state.ballSize,\n      width: this.state.ballSize,\n      height: this.state.ballSize\n    };\n    let collidedObj = arr.find(a => {\n      if (a === undefined) return false;\n      let obstacle = {\n        x: a.props.xPos - 800,\n        y: a.props.yPos,\n        width: a.props.height,\n        height: a.props.height\n      };\n\n      if (ball.x < obstacle.x + obstacle.width && ball.x > obstacle.x && ball.y >= obstacle.y && ball.y <= obstacle.y + obstacle.height) {\n        this.setState({\n          collidedObj: a\n        });\n        return true;\n      }\n\n      return false;\n    });\n    return collidedObj;\n  }\n\n  changeDirection() {\n    switch (this.state.ballDirection) {\n      case 'left':\n        this.moveSideways('left');\n        break;\n\n      case 'right':\n        this.moveSideways('right');\n        break;\n\n      case 'zero acceleration':\n        this.moveSideways('zero acceleration');\n        break;\n\n      default:\n    }\n  }\n\n  moveSideways(dir) {\n    let acceleration = this.state.xAcceleration;\n    let ball_speed = this.state.ballSpeedX;\n    if (dir === 'left') acceleration = acceleration * -1;\n    if (dir === 'zero acceleration') acceleration = 0;\n    if (ball_speed < this.state.maxSpeed && ball_speed > this.state.maxSpeed * -1 || ball_speed >= this.state.maxSpeed && acceleration < 0 || ball_speed <= this.state.maxSpeed * -1 && acceleration > 0) ball_speed += acceleration;\n    if (this.state.xPos < -800 && dir === 'left') ball_speed = 0;\n    let x = this.state.xPos + ball_speed;\n    this.setState({\n      ballSpeedX: ball_speed,\n      xPos: x\n    });\n  }\n\n  handleKeyDown(event) {\n    switch (event.keyCode) {\n      case 37:\n        this.setState({\n          ballDirection: 'left'\n        });\n        break;\n\n      case 39:\n        this.setState({\n          ballDirection: 'right'\n        });\n        break;\n\n      default:\n    }\n\n    this.setState({\n      keyPressed: true\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.state.timeoutId);\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    if (this.state.isGameOver) {\n      return /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"background\",\n          style: {\n            left: -1 * this.state.xPos / 2,\n            backgroundImage: 'url(' + this.state.background + ')'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fill_screen\",\n          style: {\n            left: -1 * this.state.xPos\n          },\n          children: [this.obstacles, /*#__PURE__*/_jsxDEV(Ball, {\n            xPos: 800 + this.state.xPos,\n            yPos: this.state.yPos,\n            height: this.state.ballSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"attempt\",\n            style: {\n              left: -1 * this.state.xPos\n            },\n            children: [\"Attempt: \", this.state.attempts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.screenWidth, \", \", this.state.screenHeight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), this.state.qboxanim ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time\",\n          children: this.state.time2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 88\n        }, this), this.state.qboxanim ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qboxanim\",\n          style: {\n            backgroundImage: 'url(' + QBoxHandling + ')'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 125\n        }, this), this.state.springanim ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"springanim\",\n          style: {\n            top: this.state.screenHeight - 100,\n            left: this.state.xPos + 800,\n            backgroundImage: 'url(' + SpringImage + ')'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 189\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default LineRiderGame;","map":{"version":3,"sources":["C:/Users/thatt/winter-project/the-app/src/Important Pages/LineRiderGame.js"],"names":["React","GameOver","Ball","Tile","QuestionBox","QBoxHandling","Spring","SpringImage","LineRiderGame","Component","constructor","props","handleKeyDown","bind","state","screenWidth","screenHeight","yPos","xPos","ballDirection","timeoutId","gameLoopTimeout","ballSpeedY","ballSpeedX","maxSpeed","gravity","difficulty","xAcceleration","ballSize","keyPressed","bounced","isGameover","loggedIn","setName","attempts","background","collidedObj","qboxanim","springanim","time1","time2","componentDidMount","setState","document","getElementById","clientWidth","clientHeight","obstacles","push","generateObstacles","window","addEventListener","gameLoop","randomPlebianCourse","randomEasyCourse","randomMediumCourse","randomHardCourse","randomExpertCourse","setTimeout","isGameOver","Date","getTime","changeDirection","resetGame","fall","grav","ball_speed","y","isThereCollision","type","arr","ball","x","width","height","find","a","undefined","obstacle","moveSideways","dir","acceleration","event","keyCode","componentWillUnmount","clearTimeout","removeEventListener","render","left","backgroundImage","top"],"mappings":"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","sourcesContent":["import './LineRiderGame.css'\r\nimport React from 'react'\r\nimport GameOver from './GameOver.js'\r\nimport Ball from '../Components/Ball'\r\nimport Tile from '../Components/Tile'\r\nimport QuestionBox from '../Components/QuestionBox'\r\nimport QBoxHandling from '../Components/Images/question_box_handling.png'\r\nimport Spring from '../Components/Spring'\r\nimport SpringImage from '../Components/Images/spring.png'\r\n\r\nclass LineRiderGame extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.handleKeyDown = this.handleKeyDown.bind(this)\r\n\r\n        this.state = {\r\n            screenWidth: 1620,\r\n            screenHeight: 977,\r\n            yPos: 150,\r\n            xPos: 0,\r\n            ballDirection: '',\r\n            timeoutId: 0,\r\n            gameLoopTimeout: 50,\r\n            ballSpeedY: 0,\r\n            ballSpeedX: 0,\r\n            maxSpeed: 30,\r\n            gravity: props.difficulty/2,\r\n            xAcceleration: 4,\r\n            ballSize: 40,\r\n            keyPressed: false,\r\n            bounced: false,\r\n            isGameover: false,\r\n            loggedIn: false,\r\n            setName: '',\r\n            attempts: 1,\r\n            difficulty: props.difficulty,\r\n            background: props.background,\r\n            collidedObj: <Tile/>,\r\n            qboxanim: false,\r\n            springanim: false,\r\n            time1: 0,\r\n            time2: 0,\r\n        }\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.setState({screenWidth: document.getElementById(\"fill_screen\").clientWidth, screenHeight: document.getElementById(\"fill_screen\").clientHeight})\r\n        this.obstacles = []\r\n        this.obstacles.push(<Tile height= {100} xPos={800} yPos={this.state.screenHeight - 50}/>)\r\n        this.generateObstacles(this.state.difficulty)\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n        this.gameLoop()\r\n    }\r\n\r\n    generateObstacles(difficulty) {\r\n        switch (difficulty) {\r\n            case 1:\r\n                this.obstacles.push(this.randomPlebianCourse())\r\n                break\r\n            case 2:\r\n                this.obstacles.push(this.randomEasyCourse())\r\n                break\r\n            case 3:\r\n                this.obstacles.push(this.randomMediumCourse())\r\n                break\r\n            case 4:\r\n                this.obstacles.push(this.randomHardCourse())\r\n                break;\r\n            case 5:\r\n                this.obstacles.push(this.randomExpertCourse())\r\n                break;\r\n        }\r\n    }\r\n\r\n    randomPlebianCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={this.state.screenHeight - 50}/>)\r\n    }\r\n\r\n    randomEasyCourse() {\r\n        return (<Spring index= {1} height= {100} xPos={1000} yPos={this.state.screenHeight - 100}/>)\r\n    }\r\n\r\n    randomMediumCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={this.state.screenHeight - 50}/>)\r\n    }\r\n\r\n    randomHardCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={this.state.screenHeight - 50}/>)\r\n    }\r\n\r\n    randomExpertCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={this.state.screenHeight - 50}/>)\r\n    }\r\n\r\n    gameLoop() {\r\n        let timeoutId = setTimeout(() => {\r\n            if (!this.state.isGameOver) {\r\n                if (this.state.qboxanim) this.setState({time2: 20000 - new Date().getTime() + this.state.time1})\r\n                this.changeDirection()\r\n                if (this.state.yPos > this.state.screenHeight-30) this.resetGame()\r\n                this.setState({ keyPressed: false, ballDirection: 'zero acceleration' })\r\n                this.fall()\r\n                if (this.state.xAcceleration > 4 && this.state.time2 <= 0) this.setState({xAcceleration: 4, qboxanim: false})\r\n            }\r\n            this.gameLoop()\r\n          }, this.state.gameLoopTimeout)\r\n        this.setState({ timeoutId })\r\n    }\r\n    \r\n    resetGame() {\r\n        let attempts = this.state.attempts\r\n        this.obstacles= []\r\n        this.obstacles.push(<Tile height= {100} xPos={800} yPos={this.state.screenHeight - 50}/>)\r\n        this.generateObstacles(this.state.difficulty)\r\n        this.setState({\r\n            xPos: 0,\r\n            yPos: 150,\r\n            ballDirection: '',\r\n            timeoutId: 0,\r\n            ballSpeedY: 0,\r\n            ballSpeedX: 0,\r\n            keyPressed: false,\r\n            bounced: false,\r\n            attempts: attempts + 1,\r\n            qboxanim: false,\r\n            springanim: false,\r\n            xAcceleration: 4,\r\n            time1: 0,\r\n            time2: 0,\r\n        })\r\n    }\r\n\r\n    fall() {\r\n        let grav = this.state.gravity\r\n        let ball_speed = this.state.ballSpeedY\r\n        let y = this.state.yPos\r\n        if (this.isThereCollision(this.obstacles) && !this.state.bounced) {\r\n            if (this.state.collidedObj.type === Tile) {\r\n                ball_speed *= -1\r\n                ball_speed += this.state.difficulty\r\n                this.setState({bounced: true})\r\n            }\r\n            else if (this.state.collidedObj.type === QuestionBox && !this.state.qboxanim) {\r\n                this.setState({qboxanim: true, xAcceleration: 10, time1: new Date().getTime()})\r\n            }\r\n            else if (this.state.collidedObj.type === Spring) {\r\n                ball_speed = -40-grav\r\n                this.setState({springanim: true, bounced: true, ballSpeedY: ball_speed, yPos: y + ball_speed})\r\n            }\r\n        }\r\n        else if (!this.isThereCollision(this.obstacles) && this.state.bounced) {\r\n            this.setState({bounced: false})\r\n        }\r\n        this.setState({ballSpeedY: ball_speed + grav, yPos: y + ball_speed})\r\n    }\r\n\r\n    isThereCollision(arr) {\r\n        let ball = {x: this.state.xPos + this.state.ballSize/2, y: this.state.yPos + this.state.ballSize, \r\n                    width: this.state.ballSize, height: this.state.ballSize}\r\n        let collidedObj = arr.find(a => {\r\n            if (a === undefined) return false\r\n            let obstacle = {x: a.props.xPos - 800, y: a.props.yPos, width: a.props.height, height: a.props.height}\r\n            if (ball.x < obstacle.x + obstacle.width && ball.x > obstacle.x &&\r\n                ball.y >= obstacle.y && ball.y <= obstacle.y+obstacle.height) {\r\n                    this.setState({collidedObj: a})\r\n                    return true\r\n                }\r\n            return false\r\n        })\r\n\r\n        return collidedObj\r\n    }\r\n\r\n    changeDirection() {\r\n        switch (this.state.ballDirection) {\r\n          case 'left':\r\n              this.moveSideways('left')\r\n            break\r\n          case 'right':\r\n              this.moveSideways('right')\r\n              break\r\n          case 'zero acceleration':\r\n              this.moveSideways('zero acceleration')\r\n            break\r\n          default:\r\n        }\r\n    }\r\n\r\n    moveSideways(dir) {\r\n        let acceleration = this.state.xAcceleration\r\n        let ball_speed = this.state.ballSpeedX\r\n        if (dir === 'left')\r\n            acceleration = acceleration * -1\r\n        if (dir === 'zero acceleration')\r\n            acceleration = 0\r\n        if ((ball_speed < this.state.maxSpeed && ball_speed > this.state.maxSpeed*-1)\r\n            || (ball_speed >= this.state.maxSpeed && acceleration < 0) || (ball_speed <= this.state.maxSpeed*-1 && acceleration > 0))\r\n            ball_speed += acceleration\r\n        if (this.state.xPos < -800 && dir === 'left')\r\n            ball_speed = 0\r\n        let x = this.state.xPos + ball_speed\r\n        this.setState({\r\n            ballSpeedX: ball_speed,\r\n            xPos: x\r\n        })\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        switch (event.keyCode) {\r\n            case 37:\r\n                this.setState({ ballDirection: 'left' })\r\n                break\r\n            case 39:\r\n                this.setState({ ballDirection: 'right' })\r\n                break\r\n            default:\r\n        }\r\n        this.setState({\r\n            keyPressed: true\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.state.timeoutId)\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isGameOver) {\r\n            return (\r\n                <GameOver/>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <div>\r\n                    <div id = \"background\" style= {{left: -1*this.state.xPos/2, backgroundImage: 'url('+this.state.background+')'}}/>\r\n                    <div id= \"fill_screen\" style= {{left: -1*this.state.xPos}}>\r\n                        {this.obstacles}\r\n                        <Ball xPos= {800 + this.state.xPos}\r\n                        yPos={this.state.yPos}\r\n                        height={this.state.ballSize}/>\r\n                        <p className= \"attempt\" style= {{left: -1*this.state.xPos}}>Attempt: {this.state.attempts}</p>\r\n                    </div>\r\n                    <p>{this.state.screenWidth}, {this.state.screenHeight}</p>\r\n                    {this.state.qboxanim ? <p className= \"time\">{this.state.time2}</p>:<p/>}\r\n                    {this.state.qboxanim ? <div className= \"qboxanim\" style= {{backgroundImage: 'url('+QBoxHandling+')'}}/>:<div/>}\r\n                    {this.state.springanim ? <div className= \"springanim\" style= {{top: this.state.screenHeight-100, left: this.state.xPos+800, backgroundImage: 'url('+SpringImage+')'}}/>:<div/>}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LineRiderGame"]},"metadata":{},"sourceType":"module"}