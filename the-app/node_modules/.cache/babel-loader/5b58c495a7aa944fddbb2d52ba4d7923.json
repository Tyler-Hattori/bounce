{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\thatt\\\\winter-project\\\\the-app\\\\src\\\\LineRiderGame.js\";\nimport './LineRiderGame.css';\nimport React from 'react';\nimport GameOver from './GameOver.js';\n\nclass LineRiderGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ballSpeed: 0,\n      gravity: 1,\n      isGameover: false,\n      ballSize: 20,\n      clicks: 0\n    };\n  } //runs immediately after LineRiderGame is created\n\n\n  componentDidMount() {\n    this.startGame();\n    this.gameLoop();\n  }\n\n  startGame() {\n    //Game\n    //Ball \n    let ballSpeed = this.props.ballSpeed;\n    let clicks = this.props.clicks;\n    let ballSize = this.props.ballSize;\n    this.setState({\n      ballSpeed,\n      clicks\n    });\n  }\n\n  gameLoop() {\n    //Loop the Game\n    this.setState({});\n  }\n\n  changeSize() {\n    this.ballSize += 3;\n    this.clicks += 1;\n\n    if (this.clicks >= 20) {\n      this.clicks = 0;\n      this.ballSize = 20;\n    }\n  }\n\n  resetGame() {\n    //reset the Game\n    //reset the Ball position\n    this.setState({});\n  } //runs when we update props or components\n\n\n  render() {\n    // If the run was a success\n    if (this.state.isGameOver) {\n      return /*#__PURE__*/_jsxDEV(GameOver //define components\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Ball\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://clipart.info/images/ccovers/1495749720Bowling-Ball-PNG-Clip-Art.png\",\n        onClick: () => height = \"50px\",\n        height: \"20px\",\n        id: \"ball-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LineRiderGame;","map":{"version":3,"sources":["C:/Users/thatt/winter-project/the-app/src/LineRiderGame.js"],"names":["React","GameOver","LineRiderGame","Component","constructor","props","state","ballSpeed","gravity","isGameover","ballSize","clicks","componentDidMount","startGame","gameLoop","setState","changeSize","resetGame","render","isGameOver","height"],"mappings":";;AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,CADF;AAETC,MAAAA,OAAO,EAAE,CAFA;AAGTC,MAAAA,UAAU,EAAE,KAHH;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,MAAM,EAAE;AALC,KAAb;AAOH,GAXuC,CAaxC;;;AACAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,SAAL;AACA,SAAKC,QAAL;AACH;;AAEDD,EAAAA,SAAS,GAAG;AACR;AACA;AACA,QAAIN,SAAS,GAAG,KAAKF,KAAL,CAAWE,SAA3B;AACA,QAAII,MAAM,GAAG,KAAKN,KAAL,CAAWM,MAAxB;AACA,QAAID,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAA1B;AACA,SAAKK,QAAL,CAAe;AACXR,MAAAA,SADW;AAEXI,MAAAA;AAFW,KAAf;AAIH;;AAEDG,EAAAA,QAAQ,GAAG;AACP;AACA,SAAKC,QAAL,CAAc,EAAd;AAGH;;AAEDC,EAAAA,UAAU,GAAG;AACT,SAAKN,QAAL,IAAiB,CAAjB;AACA,SAAKC,MAAL,IAAa,CAAb;;AACA,QAAI,KAAKA,MAAL,IAAe,EAAnB,EAAuB;AACnB,WAAKA,MAAL,GAAY,CAAZ;AACA,WAAKD,QAAL,GAAgB,EAAhB;AACH;AACJ;;AAEDO,EAAAA,SAAS,GAAG;AACR;AACA;AAEA,SAAKF,QAAL,CAAc,EAAd;AAGH,GAtDuC,CAwDxC;;;AACAG,EAAAA,MAAM,GAAG;AACL;AACA,QAAI,KAAKZ,KAAL,CAAWa,UAAf,EAA2B;AACvB,0BACI,QAAC,QAAD,CACI;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,6BACI;AAAK,QAAA,GAAG,EAAE,6EAAV;AAAwF,QAAA,OAAO,EAAE,MAAMC,MAAM,GAAG,MAAhH;AAAuH,QAAA,MAAM,EAAE,MAA/H;AAAsI,QAAA,EAAE,EAAE;AAA1I;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxEuC;;AA0E5C,eAAelB,aAAf","sourcesContent":["import './LineRiderGame.css'\r\nimport React from 'react'\r\nimport GameOver from './GameOver.js'\r\n\r\nclass LineRiderGame extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ballSpeed: 0,\r\n            gravity: 1,\r\n            isGameover: false,\r\n            ballSize: 20,\r\n            clicks: 0,\r\n        }\r\n    }\r\n\r\n    //runs immediately after LineRiderGame is created\r\n    componentDidMount() {\r\n        this.startGame()\r\n        this.gameLoop()\r\n    }\r\n\r\n    startGame() {\r\n        //Game\r\n        //Ball \r\n        let ballSpeed = this.props.ballSpeed\r\n        let clicks = this.props.clicks\r\n        let ballSize = this.props.ballSize\r\n        this.setState ({\r\n            ballSpeed,\r\n            clicks,\r\n        })\r\n    }\r\n\r\n    gameLoop() {\r\n        //Loop the Game\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n    changeSize() {\r\n        this.ballSize += 3;\r\n        this.clicks+=1;\r\n        if (this.clicks >= 20) {\r\n            this.clicks=0;\r\n            this.ballSize = 20;\r\n        }\r\n    }\r\n\r\n    resetGame() {\r\n        //reset the Game\r\n        //reset the Ball position\r\n\r\n        this.setState({\r\n            \r\n        })\r\n    }\r\n\r\n    //runs when we update props or components\r\n    render() {\r\n        // If the run was a success\r\n        if (this.state.isGameOver) {\r\n            return (\r\n                <GameOver\r\n                    //define components\r\n                />\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className = 'Ball'>\r\n                <img src= \"https://clipart.info/images/ccovers/1495749720Bowling-Ball-PNG-Clip-Art.png\" onClick={() => height = \"50px\"}height= \"20px\" id= \"ball-image\"/>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LineRiderGame;"]},"metadata":{},"sourceType":"module"}