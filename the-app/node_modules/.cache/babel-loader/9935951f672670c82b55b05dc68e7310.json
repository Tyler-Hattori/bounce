{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\thatt\\\\winter-project\\\\the-app\\\\src\\\\Important Pages\\\\LineRiderGame.js\";\nimport './LineRiderGame.css';\nimport React from 'react';\nimport GameOver from './GameOver.js';\nimport Ball from '../Components/Ball';\nimport Tile from '../Components/Tile';\nimport QuestionBox from '../Components/QuestionBox';\nimport QBoxHandling from '../Components/Images/question_box_handling.png';\nimport Spring from '../Components/Spring';\n\nclass LineRiderGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.state = {\n      yPos: 150,\n      xPos: 0,\n      ballDirection: '',\n      timeoutId: 0,\n      gameLoopTimeout: 50,\n      ballSpeedY: 0,\n      ballSpeedX: 0,\n      maxSpeed: 30,\n      gravity: props.difficulty / 2,\n      xAcceleration: 4,\n      ballSize: 40,\n      keyPressed: false,\n      bounced: false,\n      isGameover: false,\n      loggedIn: false,\n      setName: '',\n      attempts: 1,\n      difficulty: props.difficulty,\n      background: props.background,\n      collidedObj: /*#__PURE__*/_jsxDEV(Tile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 26\n      }, this),\n      qboxanim: false,\n      springanim: false,\n      time1: 0,\n      time2: 0\n    };\n  }\n\n  componentDidMount() {\n    this.obstacles = [];\n    this.obstacles.push( /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 800,\n      yPos: document.getElementById(\"fill_screen\").clientHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }, this));\n    this.generateObstacles(this.state.diffculty);\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.gameLoop();\n  }\n\n  generateObstacles(difficulty) {\n    switch (difficulty) {\n      case \"plebian\":\n        this.obstacles.push(this.randomPlebianCourse());\n        break;\n\n      case \"easy\":\n        this.obstsacles.push(this.randomEasyCourse());\n        break;\n\n      case \"medium\":\n        return this.randomMediumCourse();\n        break;\n\n      case \"hard\":\n        return this.randomHardCourse();\n        break;\n\n      case \"expert\":\n        return this.randomExpertCourse();\n        break;\n    }\n  }\n\n  randomPlebianCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: document.getElementById(\"fill_screen\").clientHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this);\n  }\n\n  randomEasyCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: document.getElementById(\"fill_screen\").clientHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this);\n  }\n\n  randomMediumCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: document.getElementById(\"fill_screen\").clientHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this);\n  }\n\n  randomHardCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: document.getElementById(\"fill_screen\").clientHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this);\n  }\n\n  randomExpertCourse() {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 1000,\n      yPos: document.getElementById(\"fill_screen\").clientHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this);\n  }\n\n  gameLoop() {\n    let timeoutId = setTimeout(() => {\n      if (!this.state.isGameOver) {\n        this.setState({\n          time2: 20000 - new Date().getTime() + this.state.time1\n        });\n        this.changeDirection();\n        if (this.state.yPos > document.getElementById(\"fill_screen\").clientHeight - 30) this.resetGame();\n        this.setState({\n          keyPressed: false,\n          ballDirection: 'zero acceleration'\n        });\n        this.fall();\n        if (this.state.xAcceleration > 4 && this.state.time2 <= 0) this.setState({\n          xAcceleration: 4,\n          qboxanim: false\n        });\n      }\n\n      this.gameLoop();\n    }, this.state.gameLoopTimeout);\n    this.setState({\n      timeoutId\n    });\n  }\n\n  resetGame() {\n    let attempts = this.state.attempts;\n    this.obstacles = [];\n    this.obstacles.push( /*#__PURE__*/_jsxDEV(Tile, {\n      height: 100,\n      xPos: 800,\n      yPos: document.getElementById(\"fill_screen\").clientHeight - 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }, this));\n    this.setState({\n      xPos: 0,\n      yPos: 150,\n      ballDirection: '',\n      timeoutId: 0,\n      ballSpeedY: 0,\n      ballSpeedX: 0,\n      keyPressed: false,\n      bounced: false,\n      attempts: attempts + 1,\n      qboxanim: false,\n      springanim: false,\n      xAcceleration: 4,\n      time1: 0,\n      time2: 0\n    });\n  }\n\n  fall() {\n    let grav = this.state.gravity;\n    let ball_speed = this.state.ballSpeedY;\n    let y = this.state.yPos;\n\n    if (this.isThereCollision(this.obstacles) && !this.state.bounced) {\n      if (this.state.collidedObj.type === Tile) {\n        ball_speed *= -1;\n        ball_speed += this.state.difficulty;\n        this.setState({\n          bounced: true\n        });\n      } else if (this.state.collidedObj.type === QuestionBox && !this.state.qboxanim) {\n        this.setState({\n          qboxanim: true,\n          xAcceleration: 10,\n          time1: new Date().getTime()\n        });\n      } else if (this.state.collidedObj.type === Spring) {\n        ball_speed = -40 - grav;\n        this.setState({\n          springanim: true,\n          bounced: true,\n          ballSpeedY: ball_speed,\n          yPos: y + ball_speed\n        });\n      }\n    } else if (!this.isThereCollision(this.obstacles) && this.state.bounced) {\n      this.setState({\n        bounced: false\n      });\n    }\n\n    this.setState({\n      ballSpeedY: ball_speed + grav,\n      yPos: y + ball_speed\n    });\n  }\n\n  isThereCollision(arr) {\n    let ball = {\n      x: this.state.xPos + this.state.ballSize / 2,\n      y: this.state.yPos + this.state.ballSize,\n      width: this.state.ballSize,\n      height: this.state.ballSize\n    };\n    let collidedObj = arr.find(a => {\n      if (a === undefined) return false;\n      let obstacle = {\n        x: a.props.xPos - 800,\n        y: a.props.yPos,\n        width: a.props.height,\n        height: a.props.height\n      };\n\n      if (ball.x < obstacle.x + obstacle.width && ball.x > obstacle.x && ball.y >= obstacle.y && ball.y <= obstacle.y + obstacle.height) {\n        this.setState({\n          collidedObj: a\n        });\n        return true;\n      }\n\n      return false;\n    });\n    return collidedObj;\n  }\n\n  changeDirection() {\n    switch (this.state.ballDirection) {\n      case 'left':\n        this.moveSideways('left');\n        break;\n\n      case 'right':\n        this.moveSideways('right');\n        break;\n\n      case 'zero acceleration':\n        this.moveSideways('zero acceleration');\n        break;\n\n      default:\n    }\n  }\n\n  moveSideways(dir) {\n    let acceleration = this.state.xAcceleration;\n    let ball_speed = this.state.ballSpeedX;\n    if (dir === 'left') acceleration = acceleration * -1;\n    if (dir === 'zero acceleration') acceleration = 0;\n    if (ball_speed < this.state.maxSpeed && ball_speed > this.state.maxSpeed * -1 || ball_speed >= this.state.maxSpeed && acceleration < 0 || ball_speed <= this.state.maxSpeed * -1 && acceleration > 0) ball_speed += acceleration;\n    if (this.state.xPos < -800 && dir === 'left') ball_speed = 0;\n    let x = this.state.xPos + ball_speed;\n    this.setState({\n      ballSpeedX: ball_speed,\n      xPos: x\n    });\n  }\n\n  handleKeyDown(event) {\n    switch (event.keyCode) {\n      case 37:\n        this.setState({\n          ballDirection: 'left'\n        });\n        break;\n\n      case 39:\n        this.setState({\n          ballDirection: 'right'\n        });\n        break;\n\n      default:\n    }\n\n    this.setState({\n      keyPressed: true\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.state.timeoutId);\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    if (this.state.isGameOver) {\n      return /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"background\",\n          style: {\n            left: -1 * this.state.xPos / 2,\n            backgroundImage: 'url(' + this.state.background + ')'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fill_screen\",\n          style: {\n            left: -1 * this.state.xPos\n          },\n          children: [this.obstacles, /*#__PURE__*/_jsxDEV(Ball, {\n            xPos: 800 + this.state.xPos,\n            yPos: this.state.yPos,\n            height: this.state.ballSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"attempt\",\n            style: {\n              left: -1 * this.state.xPos\n            },\n            children: [\"Attempt: \", this.state.attempts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), this.state.qboxanim ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time\",\n          children: this.state.time2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 88\n        }, this), this.state.qboxanim ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qboxanim\",\n          style: {\n            backgroundImage: 'url(' + QBoxHandling + ')'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 125\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default LineRiderGame;","map":{"version":3,"sources":["C:/Users/thatt/winter-project/the-app/src/Important Pages/LineRiderGame.js"],"names":["React","GameOver","Ball","Tile","QuestionBox","QBoxHandling","Spring","LineRiderGame","Component","constructor","props","handleKeyDown","bind","state","yPos","xPos","ballDirection","timeoutId","gameLoopTimeout","ballSpeedY","ballSpeedX","maxSpeed","gravity","difficulty","xAcceleration","ballSize","keyPressed","bounced","isGameover","loggedIn","setName","attempts","background","collidedObj","qboxanim","springanim","time1","time2","componentDidMount","obstacles","push","document","getElementById","clientHeight","generateObstacles","diffculty","window","addEventListener","gameLoop","randomPlebianCourse","obstsacles","randomEasyCourse","randomMediumCourse","randomHardCourse","randomExpertCourse","setTimeout","isGameOver","setState","Date","getTime","changeDirection","resetGame","fall","grav","ball_speed","y","isThereCollision","type","arr","ball","x","width","height","find","a","undefined","obstacle","moveSideways","dir","acceleration","event","keyCode","componentWillUnmount","clearTimeout","removeEventListener","render","left","backgroundImage"],"mappings":"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","sourcesContent":["import './LineRiderGame.css'\r\nimport React from 'react'\r\nimport GameOver from './GameOver.js'\r\nimport Ball from '../Components/Ball'\r\nimport Tile from '../Components/Tile'\r\nimport QuestionBox from '../Components/QuestionBox'\r\nimport QBoxHandling from '../Components/Images/question_box_handling.png'\r\nimport Spring from '../Components/Spring'\r\n\r\nclass LineRiderGame extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.handleKeyDown = this.handleKeyDown.bind(this)\r\n\r\n        this.state = {\r\n            yPos: 150,\r\n            xPos: 0,\r\n            ballDirection: '',\r\n            timeoutId: 0,\r\n            gameLoopTimeout: 50,\r\n            ballSpeedY: 0,\r\n            ballSpeedX: 0,\r\n            maxSpeed: 30,\r\n            gravity: props.difficulty/2,\r\n            xAcceleration: 4,\r\n            ballSize: 40,\r\n            keyPressed: false,\r\n            bounced: false,\r\n            isGameover: false,\r\n            loggedIn: false,\r\n            setName: '',\r\n            attempts: 1,\r\n            difficulty: props.difficulty,\r\n            background: props.background,\r\n            collidedObj: <Tile/>,\r\n            qboxanim: false,\r\n            springanim: false,\r\n            time1: 0,\r\n            time2: 0,\r\n        }\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.obstacles = []\r\n        this.obstacles.push(<Tile height= {100} xPos={800} yPos={document.getElementById(\"fill_screen\").clientHeight - 50}/>)\r\n        this.generateObstacles(this.state.diffculty)\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n        this.gameLoop()\r\n    }\r\n\r\n    generateObstacles(difficulty) {\r\n        switch (difficulty) {\r\n            case \"plebian\":\r\n                this.obstacles.push(this.randomPlebianCourse())\r\n                break\r\n            case \"easy\":\r\n                this.obstsacles.push(this.randomEasyCourse())\r\n                break\r\n            case \"medium\":\r\n                return this.randomMediumCourse()\r\n                break\r\n            case \"hard\":\r\n                return this.randomHardCourse()\r\n                break;\r\n            case \"expert\":\r\n                return this.randomExpertCourse()\r\n                break;\r\n        }\r\n    }\r\n\r\n    randomPlebianCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={document.getElementById(\"fill_screen\").clientHeight - 50}/>)\r\n    }\r\n\r\n    randomEasyCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={document.getElementById(\"fill_screen\").clientHeight - 50}/>)\r\n    }\r\n\r\n    randomMediumCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={document.getElementById(\"fill_screen\").clientHeight - 50}/>)\r\n    }\r\n\r\n    randomHardCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={document.getElementById(\"fill_screen\").clientHeight - 50}/>)\r\n    }\r\n\r\n    randomExpertCourse() {\r\n        return (<Tile height= {100} xPos={1000} yPos={document.getElementById(\"fill_screen\").clientHeight - 50}/>)\r\n    }\r\n\r\n    gameLoop() {\r\n        let timeoutId = setTimeout(() => {\r\n            if (!this.state.isGameOver) {\r\n                this.setState({time2: 20000 - new Date().getTime() + this.state.time1})\r\n                this.changeDirection()\r\n                if (this.state.yPos > document.getElementById(\"fill_screen\").clientHeight-30)\r\n                    this.resetGame()\r\n                this.setState({ keyPressed: false, ballDirection: 'zero acceleration' })\r\n                this.fall()\r\n                if (this.state.xAcceleration > 4 && this.state.time2 <= 0) this.setState({xAcceleration: 4, qboxanim: false})\r\n            }\r\n      \r\n            this.gameLoop()\r\n          }, this.state.gameLoopTimeout)\r\n      \r\n        this.setState({ timeoutId })\r\n    }\r\n    \r\n    resetGame() {\r\n        let attempts = this.state.attempts\r\n        this.obstacles= []\r\n        this.obstacles.push(<Tile height= {100} xPos={800} yPos={document.getElementById(\"fill_screen\").clientHeight - 50}/>)\r\n        this.setState({\r\n            xPos: 0,\r\n            yPos: 150,\r\n            ballDirection: '',\r\n            timeoutId: 0,\r\n            ballSpeedY: 0,\r\n            ballSpeedX: 0,\r\n            keyPressed: false,\r\n            bounced: false,\r\n            attempts: attempts + 1,\r\n            qboxanim: false,\r\n            springanim: false,\r\n            xAcceleration: 4,\r\n            time1: 0,\r\n            time2: 0,\r\n        })\r\n    }\r\n\r\n    fall() {\r\n        let grav = this.state.gravity\r\n        let ball_speed = this.state.ballSpeedY\r\n        let y = this.state.yPos\r\n        if (this.isThereCollision(this.obstacles) && !this.state.bounced) {\r\n            if (this.state.collidedObj.type === Tile) {\r\n                ball_speed *= -1\r\n                ball_speed += this.state.difficulty\r\n                this.setState({bounced: true})\r\n            }\r\n            else if (this.state.collidedObj.type === QuestionBox && !this.state.qboxanim) {\r\n                this.setState({qboxanim: true, xAcceleration: 10, time1: new Date().getTime()})\r\n            }\r\n            else if (this.state.collidedObj.type === Spring) {\r\n                ball_speed = -40-grav\r\n                this.setState({springanim: true, bounced: true, ballSpeedY: ball_speed, yPos: y + ball_speed})\r\n            }\r\n        }\r\n        else if (!this.isThereCollision(this.obstacles) && this.state.bounced) {\r\n            this.setState({bounced: false})\r\n        }\r\n        this.setState({ballSpeedY: ball_speed + grav, yPos: y + ball_speed})\r\n    }\r\n\r\n    isThereCollision(arr) {\r\n        let ball = {x: this.state.xPos + this.state.ballSize/2, y: this.state.yPos + this.state.ballSize, \r\n                    width: this.state.ballSize, height: this.state.ballSize}\r\n        let collidedObj = arr.find(a => {\r\n            if (a === undefined) return false\r\n            let obstacle = {x: a.props.xPos - 800, y: a.props.yPos, width: a.props.height, height: a.props.height}\r\n            if (ball.x < obstacle.x + obstacle.width && ball.x > obstacle.x &&\r\n                ball.y >= obstacle.y && ball.y <= obstacle.y+obstacle.height) {\r\n                    this.setState({collidedObj: a})\r\n                    return true\r\n                }\r\n            return false\r\n        })\r\n\r\n        return collidedObj\r\n    }\r\n\r\n    changeDirection() {\r\n        switch (this.state.ballDirection) {\r\n          case 'left':\r\n              this.moveSideways('left')\r\n            break\r\n          case 'right':\r\n              this.moveSideways('right')\r\n              break\r\n          case 'zero acceleration':\r\n              this.moveSideways('zero acceleration')\r\n            break\r\n          default:\r\n        }\r\n    }\r\n\r\n    moveSideways(dir) {\r\n        let acceleration = this.state.xAcceleration\r\n        let ball_speed = this.state.ballSpeedX\r\n        if (dir === 'left')\r\n            acceleration = acceleration * -1\r\n        if (dir === 'zero acceleration')\r\n            acceleration = 0\r\n        if ((ball_speed < this.state.maxSpeed && ball_speed > this.state.maxSpeed*-1)\r\n            || (ball_speed >= this.state.maxSpeed && acceleration < 0) || (ball_speed <= this.state.maxSpeed*-1 && acceleration > 0))\r\n            ball_speed += acceleration\r\n        if (this.state.xPos < -800 && dir === 'left')\r\n            ball_speed = 0\r\n        let x = this.state.xPos + ball_speed\r\n        this.setState({\r\n            ballSpeedX: ball_speed,\r\n            xPos: x\r\n        })\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        switch (event.keyCode) {\r\n            case 37:\r\n                this.setState({ ballDirection: 'left' })\r\n                break\r\n            case 39:\r\n                this.setState({ ballDirection: 'right' })\r\n                break\r\n            default:\r\n        }\r\n        this.setState({\r\n            keyPressed: true\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.state.timeoutId)\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isGameOver) {\r\n            return (\r\n                <GameOver/>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <div>\r\n                    <div id = \"background\" style= {{left: -1*this.state.xPos/2, backgroundImage: 'url('+this.state.background+')'}}/>\r\n                    <div id= \"fill_screen\" style= {{left: -1*this.state.xPos}}>\r\n                        {this.obstacles}\r\n                        <Ball xPos= {800 + this.state.xPos}\r\n                        yPos={this.state.yPos}\r\n                        height={this.state.ballSize}/>\r\n                        <p className= \"attempt\" style= {{left: -1*this.state.xPos}}>Attempt: {this.state.attempts}</p>\r\n                    </div>\r\n                    {this.state.qboxanim ? <p className= \"time\">{this.state.time2}</p>:<p/>}\r\n                    {this.state.qboxanim ? <div className= \"qboxanim\" style= {{backgroundImage: 'url('+QBoxHandling+')'}}/>:<div/>}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LineRiderGame"]},"metadata":{},"sourceType":"module"}