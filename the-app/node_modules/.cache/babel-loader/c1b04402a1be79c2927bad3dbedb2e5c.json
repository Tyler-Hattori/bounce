{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/thatt/winter-project/the-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/thatt/winter-project/the-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var refreshTokenSetup=function refreshTokenSetup(res){// Timing to renew access token\nvar refreshTiming=(res.tokenObj.expires_in||3600-5*60)*1000;var refreshToken=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newAuthRes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return res.reloadAuthResponse();case 2:newAuthRes=_context.sent;refreshTiming=(newAuthRes.expires_in||3600-5*60)*1000;console.log('newAuthRes:',newAuthRes);// saveUserToken(newAuthRes.access_token);  <-- save new token\nlocalStorage.setItem('authToken',newAuthRes.id_token);// Setup the other timer after the first one\nsetTimeout(refreshToken,refreshTiming);case 7:case\"end\":return _context.stop();}}},_callee);}));return function refreshToken(){return _ref.apply(this,arguments);};}();// Setup first refresh timer\nsetTimeout(refreshToken,refreshTiming);};","map":{"version":3,"sources":["C:/Users/thatt/winter-project/the-app/src/Components/refreshToken.js"],"names":["refreshTokenSetup","res","refreshTiming","tokenObj","expires_in","refreshToken","reloadAuthResponse","newAuthRes","console","log","localStorage","setItem","id_token","setTimeout"],"mappings":"qTAAA,MAAO,IAAMA,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,GAAD,CAAS,CACtC;AACA,GAAIC,CAAAA,aAAa,CAAG,CAACD,GAAG,CAACE,QAAJ,CAAaC,UAAb,EAA2B,KAAO,EAAI,EAAvC,EAA6C,IAAjE,CAEA,GAAMC,CAAAA,YAAY,0FAAG,wKACMJ,CAAAA,GAAG,CAACK,kBAAJ,EADN,QACbC,UADa,eAEnBL,aAAa,CAAG,CAACK,UAAU,CAACH,UAAX,EAAyB,KAAO,EAAI,EAArC,EAA2C,IAA3D,CACAI,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BF,UAA3B,EACA;AACAG,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCJ,UAAU,CAACK,QAA7C,EAEA;AACAC,UAAU,CAACR,YAAD,CAAeH,aAAf,CAAV,CARmB,sDAAH,kBAAZG,CAAAA,YAAY,0CAAlB,CAWA;AACAQ,UAAU,CAACR,YAAD,CAAeH,aAAf,CAAV,CACD,CAjBI","sourcesContent":["export const refreshTokenSetup = (res) => {\r\n    // Timing to renew access token\r\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n  \r\n    const refreshToken = async () => {\r\n      const newAuthRes = await res.reloadAuthResponse();\r\n      refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n      console.log('newAuthRes:', newAuthRes);\r\n      // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n      localStorage.setItem('authToken', newAuthRes.id_token);\r\n  \r\n      // Setup the other timer after the first one\r\n      setTimeout(refreshToken, refreshTiming);\r\n    };\r\n  \r\n    // Setup first refresh timer\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };"]},"metadata":{},"sourceType":"module"}